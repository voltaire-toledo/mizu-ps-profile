{
  "Header": "$($SecC)PowerShell Profile Help$($RstC)",
  "Host": "$($SecC)   Host:$($RstC) $($Host.Name)",
  "Profile": "$($SecC)Profile:$($RstC) $PROFILE",
  "Divider": "#divider#",
  "FeaturesHeader": "$($SecC)Features:$($RstC)",
  "Features": [
    "- Winget argument completer",
    "- Az CLI Argument Completer",
    "- Choco argument completer"
  ],
  "TerraformHeader": "$($SecC)Terraform Aliases:$($RstC)",
  "TerraformAliases": {
    "tf": "$($FunC)tf $($RstC)\t       ⁝ $($FunC)terraform         ",
    "tfi": "$($FunC)tfi$($RstC)\t       ⁝ $($FunC)terraform init -upgrade        ",
    "tfp": "$($FunC)tfp$($RstC)\t       ⁝ $($FunC)terraform plan        ",
    "tfa": "$($FunC)tfa$($RstC)\t       ⁝ $($FunC)terraform apply -auto-approve        ",
    "tfd": "$($FunC)tfd$($RstC)\t       ⁝ $($FunC)terraform destroy -auto-approve"
  },
  "GitHeader": "$($SecC)Git/GitHub Aliases:$($RstC)",
  "GitAliases": {
    "g": "$($FunC)g$($RstC)               ⁝ Changes to the GitHub directory.",
    "ga": "$($FunC)ga$($RstC)              ⁝ $($FunC)git add .",
    "gc": "$($FunC)gc $($ParC)message$($RstC)      ⁝ $($FunC)git commit -m$($RstC) with the commit's message.",
    "gcom": "$($FunC)gcom $($ParC)message$($RstC)    ⁝ $($FunC)git add . && git commit -m$($RstC) with the commit's string.",
    "gp": "$($FunC)gp$($RstC)              ⁝ $($FunC)git push",
    "gs": "$($FunC)gs$($RstC)              ⁝ $($FunC)git status",
    "yeetg": "$($FunC)yeetg $($ParC)message$($RstC)   ⁝ Just $($FunC)add-commit-push$($RstC) and yeet that shit!"
  },
  "OtherHeader": "$($SecC)Other Functions:$($RstC)",
  "OtherFunctions": {
    "cpy": "$($FunC)cpy $($ParC)[text]$($RstC)          ⁝ Copies text to the clipboard.",
    "df": "$($FunC)df$($RstC)                  ⁝ Displays volume information.",
    "docs": "$($FunC)docs$($RstC)                ⁝ Changes to the Documents folder.",
    "dtop": "$($FunC)dtop$($RstC)                ⁝ Changes to the Desktop folder.",
    "Edit-Profile": "$($FunC)Edit-Profile$($RstC)        ⁝ Opens the CurrentUserCurrentHost PSProfile for editing.",
    "ep": "$($FunC)ep$($RstC)                  ⁝ Opens the CurrentUserAllHosts PSProfile for editing.",
    "export": "$($FunC)export $($ParC)[env] [var]$($RstC)  ⁝ Sets an environment variable.",
    "ff": "$($FunC)ff $($ParC)[name]$($RstC)           ⁝ Finds files recursively.",
    "flushdns": "$($FunC)flushdns$($RstC)            ⁝ Clears the DNS cache.",
    "Get-PubIP": "$($FunC)Get-PubIP$($RstC)           ⁝ Retrieves the public IP.",
    "grep": "$($FunC)grep $($ParC)[regex] [dir]$($RstC)  ⁝ Searches for a regex pattern.",
    "hb": "$($FunC)hb $($ParC)[file]$($RstC)           ⁝ Uploads to hastebin-like service.",
    "head$": "$($FunC)head$ $($ParC)[path] [n]$($RstC)    ⁝ Displays the first n lines.",
    "k9": "$($FunC)k9 $($ParC)[name]$($RstC)           ⁝ Kills a process by name.",
    "la": "$($FunC)la$($RstC)                  ⁝ Lists files with details.",
    "ll": "$($FunC)ll$($RstC)                  ⁝ Lists all files (including hidden) with details.",
    "mkcd": "$($FunC)mkcd $($ParC)[dir]$($RstC)          ⁝ Creates and changes to a directory.",
    "nf": "$($FunC)nf $($ParC)[name]$($RstC)           ⁝ Creates a new file.",
    "o": "$($FunC)o $($ParC)[dir]$($RstC)             ⁝ Open $($FunC)explorer.exe$($RstC) and set $($ParC)[dir]$($RstC) as the CWD",
    "pgrep": "$($FunC)pgrep $($ParC)[name]$($RstC)        ⁝ Lists processes by name.",
    "pkill": "$($FunC)pkill $($ParC)[name]$($RstC)        ⁝ Kills processes by name.",
    "pst": "$($FunC)pst$($RstC)                 ⁝ Retrieves text from the clipboard.",
    "reload-profile": "$($FunC)reload-profile$($RstC)      ⁝ Reloads the PowerShell profile.",
    "sed": "$($FunC)sed $($ParC){1} {2} {3}$($RstC)     ⁝ Replaces text in a file. Values are: $($ParC){1}$($RstC) = $($ParC)File$($RstC) to replace text inside it, $($ParC){2}$($RstC) = $($ParC)String to find$($RstC) and replace, $($ParC){3}$($RstC) = $($ParC)String to replace$($RstC) what was found",
    "sysinfo": "$($FunC)sysinfo$($RstC)             ⁝ Displays system information.",
    "tail": "$($FunC)tail $($ParC)[file] [n]$($RstC)     ⁝ Displays the last $($ParC)[n]$($RstC) lines of the $($ParC)[file]$($RstC).",
    "touch": "$($FunC)touch $($ParC)[file]$($RstC)        ⁝ Creates a new empty $($ParC)[file]$($RstC).",
    "unzip$": "$($FunC)unzip$ $($ParC)[file]$($RstC)       ⁝ Extracts a zip file.",
    "Update-PowerShell": "$($FunC)Update-PowerShell$($RstC)   ⁝ Checks for PowerShell updates.",
    "uptime": "$($FunC)uptime$($RstC)              ⁝ Displays system uptime.",
    "which": "$($FunC)which $($ParC)[command]$($RstC)     ⁝ Shows the path of the $($ParC)[command]$($RstC)."
  }
}
